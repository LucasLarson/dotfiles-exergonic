# Source outer files
[[ -e ${HOME}/.zshrc.$HOST ]] && source ${HOME}/.zshrc.$HOST
source ${configdir}/shell/aliases
source ${configdir}/shell/functions

export LANG=en_US.UTF-8
export LESS=-XR
export EDITOR='vim'
export TERM=xterm-256color

export PATH=${HOME}/usr/bin:${HOME}/usr/scripts:${PATH}

# Shell options
setopt appendhistory
setopt autocd
setopt extendedglob
setopt nomatch
setopt hist_ignore_all_dups
setopt share_history
setopt auto_menu
setopt null_glob
setopt notify
setopt interactivecomments
unsetopt beep

# Autoloads
autoload -Uz compinit && compinit
autoload -U promptinit
autoload -U run-help
alias help=run-help
autoload -U colors && colors

# Zstyle
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ':completion:*' list-colors 'di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ":completion:*:commands" rehash 1
# zstyle ':completion:*:cd:*' menu yes select
zstyle :compinstall filename '~/.zshrc'


export COMPLETION_WAITING_DOTS="true"
export DISABLE_AUTO_TITLE="true"
# setopt CORRECTALL # both commands and arguments

# History Settings
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_VERIFY
setopt HIST_IGNORE_SPACE
setopt SHARE_HISTORY
setopt APPEND_HISTORY
export HISTSIZE=10000
export HISTFILE=~/.zhistory
export SAVEHIST=100000

# no need to nice backgrounded processes
setopt NO_BG_NICE

# Vim mode
bindkey -v
bindkey ",," vi-cmd-mode

# `v' in vi-cmd-mode will edit current line in Vim
autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd V edit-command-line

bindkey '^R' history-incremental-search-backward
bindkey '^N' history-incremental-search-forward

# Prompt
PROMPT="%(1j.[%j] .)%{$fg[yellow]%}%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%} %3~
%{$fg[white]%}Î»%{$reset_color%} "

# RPrompt
precmd() { RPROMPT="" }
function zle-line-init zle-keymap-select {
    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
    zle reset-prompt
}

# XDG
export XDG_CONFIG_HOME=${HOME}/.config
export XDG_DATA_HOME=${HOME}/.local/share
export XDG_CACHE_HOME=${HOME}/.cache
export XDG_RUNTIME_DIR=${HOME}/.local/runtime
export XDG_CONFIGDIRS=/etc/xdg
export XDG_DATA_DIRS=/usr/local/share/:/usr/share/

# XCompose
export QT_IM_MODULE=xum
export GTK_IM_MODULE=uim
unset XMODIFIERS


if which fasd &> /dev/null
then
    eval "$(fasd --init auto)"
    # init cache
    fasd_cache="$HOME/.fasd-init-cache"
    if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
          fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install \
              zsh-wcomp zsh-wcomp-install >| "$fasd_cache"
    fi
    source "$fasd_cache"
    unset fasd_cache
    # -- completions
    # C-x C-a to do fasd-complete (files and directories)
    bindkey '^X^A' 'fasd-complete'
    # C-x C-f to do fasd-complete-f (only files)
    bindkey '^X^F' 'fasd-complete-f'
    # C-x C-d to do fasd-complete-d (only directories)
    bindkey '^X^D' 'fasd-complete-d'
fi

source ${configdir}/zsh/syntax-highlighting/zsh-syntax-highlighting.zsh
source ${configdir}/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
eval $(dircolors ${configdir}/zsh/zsh-dircolors-solarized/dircolors-solarized/dircolors.ansi-dark)

# auto-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
bindkey '^ ' autosuggest-accept

