# Source outer files
[[ -e ${HOME}/.zshrc.$HOST ]] && source ${HOME}/.zshrc.$HOST

export LANG=en_US.UTF-8
export LESS=-XR
export EDITOR='nvim'
export VISUAl=$EDITOR
export TERM=xterm-256color

path=(${HOME}/.local/bin $path)

# Hyphen-insensitive completion.
HYPHEN_INSENSITIVE="true"

# Disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files under VCS as dirty.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Change the command execution time
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Autoloads
autoload -Uz +X compinit
autoload -U +X bashcompinit
autoload -U promptinit
autoload -U run-help
alias help=run-help
autoload -U colors && colors

# Zstyle
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-colors 'di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ":completion:*:commands" rehash 1

# completion using a menu and vi keys
zstyle ':completion:*' menu select
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history


zstyle :compinstall filename '~/.zshrc'


# Shell options
setopt extendedglob nomatch null_glob notify interactive_comments no_bg_nice

## Changing Directories
setopt auto_cd auto_pushd pushd_ignore_dups pushd_to_home

## Completions
setopt auto_list list_ambiguous

unsetopt beep

# History Settings {{{
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."

setopt append_history hist_find_no_dups hist_ignore_space hist_save_no_dups \
       hist_verify hist_ignore_dups hist_ignore_all_dups hist_fcntl_lock \
       inc_append_history share_history

export HISTSIZE=1000000
export HISTFILE=~/.zhistory
export SAVEHIST=10000000
#}}}

# KEYMAP {{{
function zle-keymap-select() {
    zle reset-prompt
    zle -R
}

zle -N zle-keymap-select
zle -N edit-command-line

# Vim mode
bindkey -v
bindkey ",," vi-cmd-mode

bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

bindkey '^b' backward-word
bindkey '^f' forward-word

# V' in vi-cmd-mode will edit current line in Vim

autoload edit-command-line
bindkey -M vicmd 'V' edit-command-line

# Search through history forward and backward using ^R, ^N
bindkey '^R' history-incremental-search-backward
bindkey '^N' history-incremental-search-forward

# Scroll up and down through history
bindkey '^k' up-history
bindkey '^j' down-history
# }}}


# Prompt
# PROMPT="%(1j.[%j] .)%{$fg[yellow]%}%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%} %3~
# %{$fg[white]%}λ%{$reset_color%} "
# PS1="%(1j.[%j] .)%{$fg[blue]%}%3~ %{$fg[magenta]%}λ%{$reset_color%} "
# PS1="%(1j.[%j] .)%{$fg[blue]%}%~ %{$fg[magenta]%}λ%{$reset_color%} "

# XDG {{{
export XDG_CONFIG_HOME=${HOME}/.config
export XDG_DATA_HOME=${HOME}/.local/share
export XDG_CACHE_HOME=${HOME}/.cache
export XDG_RUNTIME_DIR=${HOME}/.local/runtime
# export XDG_CONFIGDIRS=/etc/xdg
export XDG_DATA_DIRS=${XDG_DATA_DIRS}:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
#}}}

# XCompose
export QT_IM_MODULE=xum
export GTK_IM_MODULE=uim
unset XMODIFIERS

# FASD https://github.com/clvv/fasd {{{
# if which fasd &> /dev/null
# then
#     eval "$(fasd --init auto)"
#     # init cache
#     fasd_cache="$HOME/.fasd-init-cache"
#     if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
#           fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install \
#               zsh-wcomp zsh-wcomp-install >| "$fasd_cache"
#     fi
#     source "$fasd_cache"
#     unset fasd_cache
#     # -- completions
#     # C-p to do fasd-complete (files and directories)
#     bindkey '^P' 'fasd-complete'
#     # C-x C-f to do fasd-complete-f (only files)
#     bindkey '^X^F' 'fasd-complete-f'
#     # C-x C-d to do fasd-complete-d (only directories)
#     bindkey '^X^D' 'fasd-complete-d'
# fi
# }}}
#
 # pip zsh completion start {{{
function _pip_completion {
   local words cword
   read -Ac words
   read -cn cword
   reply=( $( COMP_WORDS="$words[*]" \
              COMP_CWORD=$(( cword-1 )) \
              PIP_AUTO_COMPLETE=1 $words[1] ) )
}
 compctl -K _pip_completion pip
# pip zsh completion end }}}

# zpm
if [[ ! -f ~/.zpm/zpm.zsh ]]; then
  git clone --recursive https://github.com/zpm-zsh/zpm ~/.zpm
fi

source ~/.zpm/zpm.zsh

zpm load "zsh-users/zsh-autosuggestions"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
bindkey '^ ' autosuggest-accept

zpm "zsh-users/zsh-syntax-highlighting"

zpm "hlissner/zsh-autopair"

zpm "Powerlevel9k/powerlevel9k"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status background_jobs vi_mode dir)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vcs)

# zplug {{{
#source ~/.zplug/init.zsh
#
## auto-autosuggestions
#zplug "zsh-users/zsh-autosuggestions"
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
#ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
#bindkey '^ ' autosuggest-accept
#
#zplug "zsh-users/zsh-syntax-highlighting", defer:2
#zplug "hlissner/zsh-autopair"
#
#
## Powerlevel9k, https://github.com/Powerlevel9k/powerlevel9k
#
#
#
## Install plugins if there are plugins that have not been installed
#if ! zplug check --verbose; then
#    printf "Install? [y/N]: "
#    if read -q; then
#        echo; zplug install
#    fi
#fi
#
## Then, source plugins and add commands to $PATH
#zplug load
# }}}

# source /usr/share/powerlevel9k/powerlevel9k.zsh-theme

source ${configdir}/shell/aliases
source ${configdir}/shell/functions

compinit
bashcompinit

