#! /usr/bin/env zsh
# vim: ft=zsh shiftwidth=2 tabstop=2 noexpandtab

#Source outer files
[[ -e ${HOME}/.zshrc.$HOST ]] && source ${HOME}/.zshrc.$HOST

# Hyphen-insensitive completion.
HYPHEN_INSENSITIVE="true"

# Disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files under VCS as dirty.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Change the command execution time
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Autoloads
autoload -Uz +X compinit
autoload -U +X bashcompinit
autoload -U promptinit
autoload -U run-help
alias help=run-help
autoload -U colors && colors

# Zstyle
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-colors 'di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ":completion:*:commands" rehash 1

# completion using a menu and vi keys
zstyle ':completion:*' menu select
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

zstyle :compinstall filename '~/.zshrc'

# Shell options
setopt extendedglob nomatch null_glob notify interactive_comments no_bg_nice

# Prompt
setopt prompt_subst

## Changing Directories
setopt auto_cd auto_pushd pushd_ignore_dups pushd_to_home

## Completions
setopt auto_list list_ambiguous

unsetopt beep

# History Settings {{{
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."

setopt append_history hist_find_no_dups hist_ignore_space hist_save_no_dups \
	hist_verify hist_ignore_dups hist_ignore_all_dups hist_fcntl_lock \
	inc_append_history share_history

export HISTSIZE=1000000
export HISTFILE=~/.zhistory
export SAVEHIST=10000000
#}}}

# KEYMAP {{{
function zle-keymap-select() {
	zle reset-prompt
	zle -R
}

zle -N zle-keymap-select
zle -N edit-command-line

# Vim mode
bindkey -v
bindkey ",," vi-cmd-mode

bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

bindkey '^b' backward-word
bindkey '^f' forward-word

# V' in vi-cmd-mode will edit current line in Vim

autoload edit-command-line
bindkey -M vicmd 'V' edit-command-line

# Search through history forward and backward using ^R, ^N
bindkey '^R' history-incremental-search-backward
bindkey '^N' history-incremental-search-forward

# Scroll up and down through history
bindkey '^k' up-history
bindkey '^j' down-history
# }}}

# Prompt
# PROMPT="%(1j.[%j] .)%{$fg[yellow]%}%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%} %3~
# %{$fg[white]%}λ%{$reset_color%} "
# PS1="%(1j.[%j] .)%{$fg[blue]%}%3~ %{$fg[magenta]%}λ%{$reset_color%} "
# PS1="%(1j.[%j] .)%{$fg[blue]%}%~ %{$fg[magenta]%}λ%{$reset_color%} "
PS1="%{$fg[magenta]%}λ %{$reset_color%}"
RPROMPT="%~"
#RPROMPT="%{$fg[grey]%}%~%{$reset_color%}"

# pip zsh completion start {{{
function _pip_completion() {
	local words cword
	read -Ac words
	read -cn cword
	reply=($(COMP_WORDS="$words[*]" \
		COMP_CWORD=$((cword - 1)) \
		PIP_AUTO_COMPLETE=1 $words[1]))
}
compctl -K _pip_completion pip
# pip zsh completion end }}}

# zgen
if [[ ! -f ~/.zgen/zgen.zsh ]]; then
	git clone https://github.com/zpm-zsh/zpm $HOME/.zgen
fi

source ~/.zgen/zgen.zsh

zgen load zsh-users/zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
bindkey '^ ' autosuggest-accept

zgen load zsh-users/zsh-syntax-highlighting
zgen load hlissner/zsh-autopair

# powerlevel9k {{{
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(vi_mode dir newline virtualenv)
# POWERLEVEL9K_VI_INSERT_MODE_STRING="🅸"
# POWERLEVEL9K_VI_COMMAND_MODE_STRING="🅽"
# POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"
# POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
# POWERLEVEL9K_SHORTEN_DELIMITER=""
# POWERLEVEL9K_DISABLE_RPROMPT=true
# POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
# zgen load Powerlevel9k/powerlevel9k powerlevel9k
# }}}

source ${CONFIGDIR}/shell/aliases
source ${CONFIGDIR}/shell/functions

compinit
bashcompinit

eval "$(register-python-argcomplete pipx)"

my_shell="$(zsh --version | awk '{print $1" "$2}' | tr '[:lower:]' '[:upper:]')"
my_term="$(ps --no-headers --pid $PPID | awk '{print $4}' | tr '[:lower:]' '[:upper:]')"
echo "NOW HACKING $my_shell IN $my_term"
